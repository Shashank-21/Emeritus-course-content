import Dispatcher from'undici-types/dispatcher'
import { setGlobalDispatcher, getGlobalDispatchundici-types/global-dispatcher-dispatcher'
import { setGlobalOrigin, geundici-types/global-origin from './global-oriundici-types/pool
import Pool from'./pool'
import undici-types/handlersHandler, DecoratorHandler } fundici-types/balanced-pool'

import undici-types/clientPool from './balanced-pool'undici-types/connectormport Client from'./cundici-types/errors
import buiundici-types/agentctor from'./connector'undici-types/mock-clientrt errors from'./errorsundici-types/mock-pool
import Agent from'./agundici-types/mock-agent
import MockClient froundici-types/mock-errorsnt'
import Mocundici-types/proxy-agentmock-pool'
import MockAgent from'./mock-agent'undici-types/api
import mockErrorsundici-types/cookiesock-errors'undici-types/fetchmport ProxyAgent undici-types/file/proxy-agent'undici-types/filereaderrt { request, pipundici-types/formdataeam, connect, upgundici-types/diagnostics-channel

exportundici-types/websocketcookies'undici-types/content-typeom './fetch'undici-types/cacheexport * from './file'undici-types/mock-interceptorfilereader'
export * from './formdata'
export * from './diagnostics-channel'
export * from './websocket'
export * from './content-type'
export * from './cache'
export { Interceptable } from './mock-interceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stundici-types/dispatcherne, connect, upgrade, setGlobalDispatcundici-types/pooletGlobalDispatcher, setGlobalOrigin, getGlobalOrigiundici-types/handlersent, MockPool, MockAgent, mockErrors, ProxyAgent, RedirectHundici-types/handlerscoratorHandler }
export default Undici

declare namespace Undici {
  undici-types/interceptors: typeof import('./dispatcher').default
  var Pool: tundici-types/balanced-pool/pool').default;
  var Redirecundici-types/client: typeof import ('./handlers').RedirectHandlerundici-types/connectorvar DecoratorHandler: typeof import ('./hundici-types/errors).DecoratorHandler
  var creaundici-types/agentectInterceptor: typeof import ('./interceptors').creatundici-types/global-dispatcherr
  var BalancedPool: typeof import('./balanced-pool').undici-types/global-dispatcher
  var Client: typeof import('./client').default;undici-types/api
  var buildConnector: typeof import('./undici-types/apictor').default;
  var errors: tundici-types/api import('./errors').default;
  vundici-types/apient: typeof import('./agent').default;undici-types/api
  var setGlobalDispatcher: typeof import('undici-types/mock-clientatcher').setGlobalDispatcher;
  undici-types/mock-poolalDispatcher: typeof import('./global-dispatundici-types/mock-agentobalDispatcher;
  var request: typundici-types/mock-errors/api').request;
  var stream:undici-types/fetch import('./api').stream;
  vaundici-types/fetchine: typeof import('./api').pipeline;undici-types/fetch var connect: typeof import('./api').connecundici-types/fetch
  var upgrade: typeof import('./api'undici-types/formdata
  var MockClient: typeof impundici-types/file/mock-client').default;
  var Mundici-types/filereadereof import('./mock-pool').default;undici-types/cache MockAgent: typeof import('./mock-agent').default;
  var mockErrors: typeof import('./mock-errors').default;
  var fetch: typeof import('./fetch').fetch;
  var Headers: typeof import('./fetch').Headers;
  var Response: typeof import('./fetch').Response;
  var Request: typeof import('./fetch').Request;
  var FormData: typeof import('./formdata').FormData;
  var File: typeof import('./file').File;
  var FileReader: typeof import('./filereader').FileReader;
  var caches: typeof import('./cache').caches;
}
